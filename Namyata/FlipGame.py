import unittest
# You are playing a Flip Game with your friend.
#
# You are given a string currentState that contains only '+' and '-'. You and your friend take turns to flip two consecutive "++" into "--". The game ends when a person can no longer make a move, and therefore the other person will be the winner.
#
# Return all possible states of the string currentState after one valid move. You may return the answer in any order. If there is no valid move, return an empty list [].
# 
# Constraints:
#
# 1 <= currentState.length <= 500
# currentState[i] is either '+' or '-'.



def generatePossibleNextMoves(currentState: str) :
    if not "++" in currentState:
        return []
    splt = [_ for _ in currentState]
    res = []
    i = 0
    while i <= len(currentState) - 2:
        if currentState[i:(i + 2)] == "++":
            tmp = splt.copy()
            tmp[i], tmp[i + 1] = '--'
            res.append(''.join(tmp))
        i += 1
    return res

class TestGeneratePossibleNextMoves(unittest.TestCase):
    def test_no_moves(self):
        currentState = "--"
        expected = []
        self.assertEqual(generatePossibleNextMoves(currentState), expected)

    def test_single_move(self):
        currentState = "++-+"
        expected = ["--+"]
        # expected = ["---+"]
        self.assertEqual(generatePossibleNextMoves(currentState), expected)

    def test_multiple_moves(self):
        currentState = "++++"
        expected = ["--++", "+--+", "++--"]
        self.assertEqual(generatePossibleNextMoves(currentState), expected)

    def test_no_plus_signs(self):
        currentState = "--"
        expected = []
        self.assertEqual(generatePossibleNextMoves(currentState), expected)

if __name__ == '__main__':
    unittest.main()

# One test case generated by ChapGPT was wrong. uncomment the line to run the correct version.
